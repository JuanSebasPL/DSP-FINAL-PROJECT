version: "3.9"

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.0  # Official Airflow image
  environment:
    &airflow-common-env
    AIRFLOW_CORE_EXECUTOR: CeleryExecutor
    AIRFLOW_DATABASE_SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW_CELERY_RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW_CELERY_BROKER_URL: redis://:@redis:6379/0
    AIRFLOW_CORE_FERNET_KEY: ""
    AIRFLOW_CORE_DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW_CORE_LOAD_EXAMPLES: "false"
    AIRFLOW_API_AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    - postgres
    - redis

services:
  # ======================= #
  # Database for Airflow    #
  # ======================= #
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  # ======================= #
  # Redis (Celery broker)   #
  # ======================= #
  redis:
    image: redis:7
    command: redis-server --save "" --appendonly no
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # ======================= #
  # Airflow components      #
  # ======================= #
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db migrate
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    restart: "no"

volumes:
  postgres-db-volume:
  redis-data:
  dags:
  logs:
  plugins:
